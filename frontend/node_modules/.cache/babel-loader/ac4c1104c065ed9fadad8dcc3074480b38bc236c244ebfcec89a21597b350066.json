{"ast":null,"code":"import { io } from \"socket.io-client\";\n\n// Establish WebSocket connection\nconst socket = new WebSocket('ws://localhost:8000/ws');\n\n// Function to send game data to the server\nexport const sendGameData = data => {\n  socket.emit(\"game_data\", data);\n};\n\n// Function to listen for game state updates from the server\nexport const listenForGameState = callback => {\n  socket.on(\"game_state\", callback);\n};\n\n// Function to handle WebSocket disconnection\nexport const disconnectSocket = () => {\n  socket.disconnect();\n};\nexport default socket;","map":{"version":3,"names":["io","socket","WebSocket","sendGameData","data","emit","listenForGameState","callback","on","disconnectSocket","disconnect"],"sources":["/Users/dibyendubar/ping_pong_game/frontend/src/socket.js"],"sourcesContent":["import { io } from \"socket.io-client\";\n\n// Establish WebSocket connection\nconst socket = new WebSocket('ws://localhost:8000/ws');\n\n// Function to send game data to the server\nexport const sendGameData = (data) => {\n  socket.emit(\"game_data\", data);\n};\n\n// Function to listen for game state updates from the server\nexport const listenForGameState = (callback) => {\n  socket.on(\"game_state\", callback);\n};\n\n// Function to handle WebSocket disconnection\nexport const disconnectSocket = () => {\n  socket.disconnect();\n};\n\nexport default socket;\n"],"mappings":"AAAA,SAASA,EAAE,QAAQ,kBAAkB;;AAErC;AACA,MAAMC,MAAM,GAAG,IAAIC,SAAS,CAAC,wBAAwB,CAAC;;AAEtD;AACA,OAAO,MAAMC,YAAY,GAAIC,IAAI,IAAK;EACpCH,MAAM,CAACI,IAAI,CAAC,WAAW,EAAED,IAAI,CAAC;AAChC,CAAC;;AAED;AACA,OAAO,MAAME,kBAAkB,GAAIC,QAAQ,IAAK;EAC9CN,MAAM,CAACO,EAAE,CAAC,YAAY,EAAED,QAAQ,CAAC;AACnC,CAAC;;AAED;AACA,OAAO,MAAME,gBAAgB,GAAGA,CAAA,KAAM;EACpCR,MAAM,CAACS,UAAU,CAAC,CAAC;AACrB,CAAC;AAED,eAAeT,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}